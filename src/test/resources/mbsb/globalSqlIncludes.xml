<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="global">
<typeAlias alias="hmap" type="java.util.HashMap"/>
<typeAlias alias="ts" type="java.sql.Timestamp"/>
<typeAlias alias="$" type="java.math.BigDecimal"/>

<sql id="sequencePrefix">select nextval('</sql>
<sql id="sequenceSuffix">')</sql>
<sql id="currentdate">current_date</sql>
<sql id="fromdual"></sql>

 <sql id="affectsCode">'P','B','C','H','L','K','O','M','I'</sql>
 <sql id="affectsCodePaymentEvaluation">'P','U','C','H','L','K','O','M','I'</sql>
 
 <resultMap id="ref" class="hmap">
  <result property="ID" javaType="long" />
  <result property="CODE" javaType="string" />
  <result property="DESCRIPTION" javaType="string" />
  <result property="DISABLE" javaType="boolean" />
  <result property="SORT_PRIORITY" javaType="long" />
 </resultMap>
<sql id="refselect">select ID, CODE, DESCRIPTION, DISABLE, SORT_PRIORITY</sql>
<sql id="pleaseSelectText">' Please Select '</sql>
<sql id="pleaseSelectRef">select NULL, NULL, <include refid="pleaseSelectText"/>, false , -1</sql>

<sql id="selectAllText">' All '</sql>
<sql id="selectAllRef">select NULL, NULL, <include refid="selectAllText"/>, false , -1</sql>

 <resultMap id="booleanvalues" class="java.util.HashMap">
  <result property="TRUE" javaType="boolean" />
  <result property="FALSE" javaType="boolean" />
 </resultMap>
 <select id="booleanvalues" resultMap="booleanvalues"
  parameterClass="map">
  select true,false <include refid="fromdual" />
 </select>
<resultMap class="hmap" id="getYesNoPleaseSelect">
 <result property="BOOLEAN_VALUE" javaType="boolean"/>
 <result property="LONG_VALUE" javaType="long"/>
 <result property="DESCRIPTION"/>
 <result property="SORT_PRIORITY" javaType="long"/>
</resultMap>
<select id="getYesNoPleaseSelect" resultMap="getYesNoPleaseSelect">
select true, 1, 'Yes', 1 as SORT_PRIORITY <include refid="fromdual"/>
 union
select false, 0, 'No', 2 <include refid="fromdual"/>
 union
select NULL, NULL, <include refid="pleaseSelectText"/>, -1 <include refid="fromdual"/>
order by SORT_PRIORITY
</select>
<!-- Just Yes/No, Yes should be selected by default -->
<select id="getYesNo" resultMap="getYesNoPleaseSelect">
select true, 1, 'Yes', 1 as SORT_PRIORITY <include refid="fromdual"/>
 union
select false, 0, 'No', 2 <include refid="fromdual"/>
order by SORT_PRIORITY
</select>


<resultMap class="hmap" id="selectNegativeOne">
 <result property="NEGATIVE_ONE" javaType="long"/>
</resultMap>
<select id="selectNegativeOne" resultMap="selectNegativeOne">
select -1 <include refid="fromdual"/>
</select>

<resultMap class="hmap" id="getZero">
 <result property="ZERO" javaType="$"/>
</resultMap>
<select id="getZero" resultMap="getZero">
select 0 <include refid="fromdual"/>
</select>
<resultMap class="hmap" id="getLongZero">
 <result property="ZERO" javaType="long"/>
</resultMap>
<select id="getLongZero" resultMap="getLongZero">
select 0 <include refid="fromdual"/>
</select>

<resultMap class="hmap" id="selectOne">
 <result property="ONE" javaType="long"/>
  <result property="NEGATIVE_ONE" javaType="long"/>
   <result property="ZERO" javaType="long"/>
</resultMap>
<select id="selectOne" resultMap="selectOne">
select 1,-1,0 <include refid="fromdual"/>
</select>

<resultMap class="hmap" id="getOneToFive">
 <result property="ONE" javaType="long"/>
 <result property="TWO" javaType="long"/>
 <result property="THREE" javaType="long"/>
 <result property="FOUR" javaType="long"/>
 <result property="FIVE" javaType="long"/>
</resultMap>
<select id="getOneToFive" resultMap="getOneToFive">
select 1,2,3,4,5 <include refid="fromdual"/>
</select>


<resultMap class="hmap" id="selectSuccessfulDummyID">
 <result javaType="long" property="SUCCESSFUL1"/>
</resultMap>
<select id="selectSuccessfulDummyID" parameterClass="map" resultMap="selectSuccessfulDummyID">
 select 15004 <include refid="fromdual"/>
</select>

<resultMap class="hmap" id="getTrue">
 <result property="TRUE" javaType="boolean"/>
</resultMap>
<select id="getTrue" resultMap="getTrue">
select true <include refid="fromdual"/>
</select>
<resultMap class="hmap" id="getTrueAndFalse">
 <result property="TRUE" javaType="boolean"/>
 <result property="FALSE" javaType="boolean"/>
</resultMap>
<select id="getTrueAndFalse" resultMap="getTrueAndFalse">
select true, false <include refid="fromdual"/>
</select>

<resultMap class="hmap" id="getPagingUtilValues">
 <result javaType="boolean" property="TRUE"/>
 <result javaType="boolean" property="FALSE"/>
 <result javaType="long" property="ONE"/>
 <result javaType="long" property="NEGATIVE_ONE"/>
</resultMap>
<select id="getPagingUtilValues" resultMap="getPagingUtilValues">
select true, false, 1, -1 <include refid="fromdual" />
</select>
<sql id="getPaginationStart">
(1 + ((coalesce(cast(#PAGE_NUMBER#  AS NUMERIC),1)  - 1) * #MAX_RESULT_PER_PAGE:NUMERIC#)) 
</sql>
<sql id="getPaginationEnd">
(#MAX_RESULT_PER_PAGE:NUMERIC# * coalesce(cast(#PAGE_NUMBER#  AS NUMERIC), 1))
</sql>


<sql id="true">
	true
</sql>
<sql id="false">
	false
</sql> 


<resultMap id="scheduleValuesRef" class="java.util.HashMap">
		<result property="ID" javaType="string"/>
		<result property="DESCRIPTION"  javaType="string"/>
	</resultMap>
	<select id="generatedReportFilter" resultMap="scheduleValuesRef">		
		select a.ID,a.DESCRIPTION from
		(
		values
		('1','Today'),
		('2','Yesterday'),
		('3','Last 7 Days'),
		('4','Last 30 Days'),
		('5','Last 1 Year'),
		('6','Last 2 Years')
		)
		 as a (ID,DESCRIPTION)
	</select>
	<select id="getCronYearRef" resultMap="scheduleValuesRef">
		select a.ID,a.DESCRIPTION from
		(
		values
		(cast(extract(year from(current_timestamp)) as varchar(25)),cast(extract(year from(current_timestamp)) as varchar(25))),
		(cast(extract(year from(current_timestamp))+1 as varchar(25)),cast(extract(year from(current_timestamp))+1 as varchar(25))),
		(cast(extract(year from(current_timestamp))+2 as varchar(25)),cast(extract(year from(current_timestamp))+2 as varchar(25)))
		)
		 as a (ID,DESCRIPTION)
	</select>
	<select id="getCronMonthRef" resultMap="scheduleValuesRef">
		select a.ID,a.DESCRIPTION from
		(
		values
		('1','January'),
		('2','Febuary'),
		('3','March'),
		('4','April'),
		('5','May'),
		('6','June'),
		('7','July'),
		('8','August'),
		('9','September'),
		('10','October'),
		('11','November'),
		('12','December')
		)
		 as a (ID,DESCRIPTION)
	</select>
	<select id="getCronWeekOfMonthRef" resultMap="scheduleValuesRef">
		select a.ID,a.DESCRIPTION from
		(
		values
		('1-7','Week 1'),
		('8-14','Week 2'),
		('15-21','Week 3'),
		('22-28','Week 4')
		)
		 as a (ID,DESCRIPTION)
	</select>		
		<select id="getCronDayOfWeekRef" resultMap="scheduleValuesRef">
		select a.ID,a.DESCRIPTION from
		(
		values
		('1','Sunday'),
		('2','Monday'),
		('3','Tuesday'),
		('4','Wednesday'),
		('5','Thursday'),
		('6','Friday'),
		('7','Saturday')
		)
		 as a (ID,DESCRIPTION)
	</select>
		<select id="getCronDayOfMonthRef" resultMap="scheduleValuesRef">
		select a.ID,a.DESCRIPTION from
		(
		values
		('1','1st'),
		('2','2nd'),
		('3','3rd'),
		('4','4th'),
		('5','5th'),
		('6','6th'),
		('7','7th'),
		('8','8th'),
		('9','9th'),
		('10','10th'),
		('11','11th'),
		('12','12th'),
		('13','13th'),
		('14','14th'),
		('15','15th'),
		('16','16th'),
		('17','17rd'),
		('18','18th'),
		('19','19th'),
		('20','20th'),
		('21','21st'),
		('22','22nd'),
		('23','23rd'),
		('24','24th'),
		('25','25th'),
		('26','26th'),
		('27','27th'),
		('28','28th'),
		('29','29th'),
		('30','30th'),
		('31','31st')		
		)
		 as a (ID,DESCRIPTION)
	</select>
		<select id="getCronHourRef" resultMap="scheduleValuesRef">
		select a.ID,a.DESCRIPTION from
		(
		values
		('0','0'),
		('1','1'),
		('2','2'),
		('3','3'),
		('4','4'),
		('5','5'),
		('6','6'),
		('7','7'),
		('8','8'),
		('9','9'),
		('10','10'),
		('11','11'),
		('12','12'),
		('13','13'),
		('14','14'),
		('15','15'),
		('16','16'),
		('17','17'),
		('18','18'),
		('19','19'),
		('20','20'),
		('21','21'),
		('22','22'),
		('23','23')		
		)
		 as a (ID,DESCRIPTION)
	</select>
		<select id="getCronMinutesRef" resultMap="scheduleValuesRef">
		select a.ID,a.DESCRIPTION from
		(
		values
		('0','0'),
		('1','1'),
		('2','2'),
		('3','3'),
		('4','4'),
		('5','5'),
		('6','6'),
		('7','7'),
		('8','8'),
		('9','9'),
		('10','10'),
		('11','11'),
		('12','12'),
		('13','13'),
		('14','14'),
		('15','15'),
		('16','16'),
		('17','17'),
		('18','18'),
		('19','19'),
		('20','20'),
		('21','21'),
		('22','22'),
		('23','23'),
	    ('24','24'),
		('25','25'),
		('26','26'),
		('27','27'),
		('28','28'),
		('29','29'),
		('30','30'),
		('31','31'),
		('32','32'),
		('33','33'),
		('34','34'),
		('35','35'),
		('36','36'),
		('37','37'),
		('38','38'),
		('39','39'),
		('40','40'),
		('41','41'),
		('42','42'),
		('43','43'),
		('44','44'),
		('45','45'),
		('46','46'),
		('47','47'),
		('48','48'),
		('49','49'),
		('50','50'),
		('51','51'),
		('52','52'),
		('53','53'),
	    ('54','54'),
		('55','55'),
		('56','56'),
		('57','57'),
		('58','58'),
		('59','59')		
		)
		 as a (ID,DESCRIPTION)
	</select>
	<resultMap id="scheduleOnceData" class="java.util.HashMap">
		<result property="DAY_OF_MONTH" javaType="string"/>
		<result property="MONTH"  javaType="string"/>
		<result property="YEAR"  javaType="string"/>
		<result property="HOUR"  javaType="string"/>
		<result property="MINUTES"  javaType="string"/>
		<result property="DAY_OF_WEEK"  javaType="string"/>
	</resultMap>

	<select id="scheduleOnceData" resultMap="scheduleOnceData">		
		select 
		extract(day from(cast(#SCHEDULE_TIME:TIMESTAMP# as date))),
		extract(month from(cast(#SCHEDULE_TIME:TIMESTAMP# as date))),
		extract(year from(cast(#SCHEDULE_TIME:TIMESTAMP# as date))),
		extract(hour from(cast(#SCHEDULE_TIME:TIMESTAMP# as timestamp))),
		extract(minute from(cast(#SCHEDULE_TIME:TIMESTAMP# as timestamp))),
		'*' 
		<include refid="fromdual"/>
	</select>
	
	<resultMap class="hmap" id="nextPage">
	 <result property="PAGE_NUMBER" javaType="long"/>
	</resultMap>
	<select id="nextPage" resultMap="nextPage">
	 select 
	<isEqual property="next" compareValue="true">
	<isNotEqual property="PAGE_NUMBER" compareProperty="TOTAL_PAGE">
	cast(#PAGE_NUMBER# AS NUMERIC) + 1		
	</isNotEqual>
	<isEqual property="PAGE_NUMBER" compareProperty="TOTAL_PAGE">
	cast(#PAGE_NUMBER# AS NUMERIC)	
	</isEqual>
	</isEqual>
	<isEqual property="previous" compareValue="true">
	 <isEqual property="PAGE_NUMBER" compareValue="1">
	 	1
	 </isEqual>
	<isGreaterThan property="PAGE_NUMBER" compareValue="1">
	cast(#PAGE_NUMBER# AS NUMERIC) - 1	
	</isGreaterThan> 
	<isLessThan property="PAGE_NUMBER" compareValue="1">
		1
	</isLessThan>
	</isEqual>
	 <include refid="fromdual"/>
	</select>	
	
	<resultMap class="hmap" id="getPagingRecordRange">
	 <result property="RANGE_START" javaType="long"/>
	 <result property="RANGE_END" javaType="long"/>
	</resultMap>
	<select id="getPagingRecordRange" resultMap="getPagingRecordRange">
		 select coalesce((1 + ((cast(#PAGE_NUMBER# AS NUMERIC)  - 1) * #LIMIT_BY:NUMERIC#)), 1), coalesce((#LIMIT_BY:NUMERIC# * cast(#PAGE_NUMBER# AS NUMERIC)), 500)
		 <include refid="fromdual"/>
	</select> 
	
	<resultMap class="hmap" id="getTotalPage">
		 <result property="TOTAL_PAGE" javaType="long"/>
		 <result property="RESULT_COUNT" javaType="long"/>
	</resultMap>
		
	<sql id="totalCountFragment">
		select ceil(count(*)/cast(#LIMIT_BY# as double precision)),count(*) from	
	</sql>	
	<resultMap id="condition" class="hmap">
		<result property="FIELD_NAME" javaType="string" />
		<result property="FIELD_TYPE" javaType="string" />
		<result property="FIELD_DESCRIPTION" javaType="string" />
		<result property="DISCRETE_VALUE_DESCRIPTION" javaType="string" />
		<result property="DISCRETE_VALUE_ID" javaType="long" />
		<result property="DISCRETE_VALUE_DISABLED" javaType="boolean" />
	</resultMap>
	
	<resultMap class="hmap" id="getLoginUserType">
		 <result property="USER_TYPE_ID" javaType="long"/>
	</resultMap>
		
	<select id="getLoginUserType" resultMap="getLoginUserType">
		SELECT USER_TYPE_ID FROM PTRUSER WHERE USER_ID = #LOGON_USER#
	</select>				
	<resultMap class="hmap" id="getLoginUserAgencyId">
		 <result property="AGENCY_ID" javaType="long"/>
	</resultMap>
		
	<select id="getLoginUserAgencyId" resultMap="getLoginUserAgencyId">
		SELECT AGENCY_ID FROM PTRUSER WHERE USER_ID = #LOGON_USER#
	</select>	
	<resultMap class="hmap" id="getUserEmployeePosition">
		 <result property="EMPLOYEE_POSITION_CODE" javaType="string"/>
	</resultMap>
		
	<select id="getUserEmployeePosition" resultMap="getUserEmployeePosition">
		select distinct r.code from ptruser u
		inner join ptremployee e on e.id=u.employee_id
		inner join ptremployee_position_ref r on r.id=e.position_id
		where u.user_id=#LOGON_USER#
	</select>		
	<resultMap class="hmap" id="getZeroToTen">
 <result property="ONE" javaType="long"/>
 <result property="TWO" javaType="long"/>
 <result property="THREE" javaType="long"/>
 <result property="FOUR" javaType="long"/>
 <result property="FIVE" javaType="long"/>
 <result property="SIX" javaType="long"/>
 <result property="SEVEN" javaType="long"/>
 <result property="EIGHT" javaType="long"/>
 <result property="NINE" javaType="long"/>
 <result property="TEN" javaType="long"/>
</resultMap>
<select id="getZeroToTen" resultMap="getZeroToTen">
select 1,2,3,4,5,6,7,8,9,10 <include refid="fromdual"/>
</select>


</sqlMap>